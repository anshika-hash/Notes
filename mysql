command to access mysql server.
mysqld.exe in mysqlserver and mysql.exe in mysql clint use to communicate mysqlclint  and msql server.
msql.exe  ------------------->mysqld.exe.
mysql client interact with mysql server. and mysql server interact with databases.


-> d:
-> cd bin
-> cd mysql
-> cd mysql15.6.17
-> cd bin
-> mysql -u root -p
-> enter
-> enter 
mysql> status;
-> show databases;

// to select database
-> use test;
-> satus;

// show cmd. run after use cmd.
-> show tables;
-> use db1;   // now i am in db1
-> show tables;
-> use mysql;
-> show tables;

//  databases -> tables -> data
-> create database db2;
-> drop database db2;    // for remove database.

// to create  and drop the table.
---------------------------------
-> show databases;
-> create database db2;
-> use db2;
-> show tables;
-> create table employee<Empid int<6>, Ename varchar<50>, Salary float<8,2>>;
-> describe employee;     // Info. about table.
-> drop table employee;

// How insert data into tables.
-> use db2;
-> describe employee;
-> select * from employee;
-> insert into employee <Emp_id,E_name,E_name,Salary> values <6,'Anshika',300000>;

// Update data into tables.   
--------------------------
// Update Table_name Set Column_Name = New_Value   [,column_name=new_value,..] Where condition;
// desc employee;
-> Update employee
  ->set salary = salary+50;
// Update into selected rows
-> Update employee;
  -> set salary = salary-35;
  -> Where salary<5000;

// delete data into tables.
---------------------------
// DELETE FROM table_name;     //deleting all rows from table.
// DELETE FROM table_name WHERE condition;
-> Delete from person Where person_id = 2;
-> Delete from person Where person_id < 12;     
-> Delete from person;

// Select cmd.  how to select data from table.
----------------------------------------------
1) All columns, All rows.                        -> Select * from table_name;
2) Selected columns, all rows.                   -> Select column(s) from table_name;
3) All columns, selected rows.                   -> Select * from table_name WHERE condition;
4) Selected columns, selected rows.              -> Select column(s) from table_name Where condition;

1) Select * from person;
2) Select * from employee Where salary>4000 and ename='Rahul';
  -> Select * from employee Where ename like 'A%' ;
3) Select ename,salary from table_name Where condition;

// Not null constraint 
// Constraints are used to limit the type of data that can go into table
// Constraints can be specified when a table is created(with the CREATE TABLE statements) or after the table is created(with the ALTER TABLE statement).
                    CONSTRAINTS
                    ------------
1) Not Null
2) Unique
3) Primary Key
4) Foreign Key
5) Default
6) Check

// Not null constraints enforces a column to not accept null values.
ex- CREATE TABLE table_name
  (
  column_name1 datatype NOT NULL,
  column_name1 datatype NOT NULL,
  ...,
  );

-> CREATE TABLE employee
  -> <empid int<4> NOT NULL,
  -> ename varchar<15>,
  -> salary float<8,2>,
  -> nick_name varchar<6>>;
  -> insert into employee <empid,ename,salary,nick_name> values <1,'Anshika',434555,'banti'>;
  -> select * from employee;
  
  ->Alter Table employee      // Remove constraints
    -> Modify empid int<4>;

 ->Alter Table employee       // Add constraints
    -> Modify empid int<4> NOT NULL;

// Unique constraints.
----------------------
First method--:
->CREATE TABLE Persons                    
  ->(
  P_ID INT,
  LAST_NAME VACHAR(255),
  FIRST NAME VARCHAR(255),
  ADDRESS VARCHAR(255),
  CITY VARCHAR(255),
  UNIQUE(P_ID)
  );
                                       
  SECOND METHOD
                                          
                                            ->(                                     
                                            P_ID INT UNIQUE,
                                            LAST_NAME VACHAR(255),
                                            FIRST NAME VARCHAR(255),
                                            ADDRESS VARCHAR(255),
                                            CITY VARCHAR(255),
                                            UNIQUE(P_ID)
                                            );                                      

-> ALTER TABLE Persons
  -> ADD UNIQUE(P_ID);

// PRIMARY KEY CONSTRAINTS
---------------------------
// WE CAN MAKE MORE THE THAN ANO COLUMN PRIMARY  KEY. 

1) CREATE TABLE
2) ALTER TABLE

FIRST METHOD:-
-> CREATE TABLE BOOK
  -> <B_ID INT<5> PRIMARY KEY,
  -> TITLE VARCHAR<10>,
  -> PRICE FLOAT<7,2>
  -> >;
  INSERT INTO BOOK<B_ID,TITLE,PRICE> VALUES <1,'ABC',120.45>;

SECOND METHOD:-
-> CREATE TABLE BOOK
  -> <B_ID INT<5> ,
  -> TITLE VARCHAR<10>,
  -> PRICE FLOAT<7,2>
  -> PRIMARY KEY<B_ID>>;
  -> >;

THIRD METHOD
-> ALTER TABLE BOOK ADD PRIMARY KEY<B_ID>; 

FORIGN KEY:-
-----------
ONE TO MANY RELATION
ONE TO ONE RALATION
MANY TO MANY RELATION   //WE MAKE DIFFERENT TABLE OF PRIMARY KEYS. (JUNCTION TABLE)
 
 -> CREATE TABLE BOOK
 --------------------
  -> <B_ID INT<5> ,
  -> COMPANY VARCHAR<10>,
  -> REGNO VARCHAR<20>
  -> PRIMARY KEY<B_ID>>;
  -> >;


 -> CREATE TABLE DRIVER
 ----------------------
  -> <D_ID INT<5> ,
  -> NAME VARCHAR<10>,
  -> PHONE VARCHAR<20>
  -> BUS_ID INT<5>,
  -> PRIMARY KEY<D_ID>,
  -> FOREIGN KEY<BUS_ID REFERENCES BUS<B_ID>
  -> >;

-> ALTER TABLE T2
-> ADD FOREIGN KEY(C2)
-> REFERENCES T1(COLUMN);

SET DEFAULT VALUE:-
-------------------
-> CREATE TABLE PERSONS
-> (
-> P_ID INT PRIMARY KEY,
-> LASTNAME VARCHAR(255) NOT NULL,
-> FIRSTNAME VARCHAR(255),
-> ADDRESS VARCHAR(255),
-> CITY VARCHAR(255) DEFAULT 'BHOPAL'
-> );

-> ALTER TABLE PERSONS
-> ALTER CITY SET DEFAULT 'BHOPAL';

CHECK CONSTRAINTS:-
-------------------
-> CREATE TABLE PERSONS
-> (
-> P_ID INT NOT NULL,
-> LASTNAME VARCHAR(255) NOT NULL,
-> FIRSTNAME VARCHAR(255),
-> ADDRESS VARCHAR(255),
-> CITY VARCHAR(255),
-> CHECK(P_ID >0)
-> );

-> ALTER TABLE PERSONS
-> ADD CHECK<P_ID>0>;  //P_ID SHOULD BE GREATER THAN 0.

AUTO_INCREMENT ATTRIBUTE CAN BE USED TO GENERATE A UNIQUE IDENTITY FOR NEW ROWS:-
---------------------------------------------------------------------------------
 CREATE TABLE NAME
-> (
->  COLUMN_NAME TYPE AUTO_INCREMENT,
->  COLUMN_NAME1 TYPE ,
-> COLUMN_NAME2 TYPE ,
->  PRIMARY KEY<COLUMN_NAME1>
-> );

HOW TO CREATE USER IN MYSQL:-
-----------------------------
-> CREATE USER 'USERNAME'@'localhost'  // if database is on a SAME MACHINE.
-> IDENTIFIED BY 'PASSWORD';

// NOW HOW NEW USER WILL USE THE DATABASE
-> OPEN COMMAND PROMPT
-> E:
-> wamp
-> cd bin
-> cd mysql
-> cd mysql5.6.17
-> cd bin
-> mysql -u anshika -p
-> anshika //PASSWORD
-> status
-> show databases;
-> GRANT ALL PRIVILAGES ON *.* TO 'username'@'localhost';   // or select_priv,insert_priv,update_priv. at the place of all.
-> GRANT ALL PRIVILAGES ON db1.* TO 'anshika'@'localhost';

HOW TO CONNECT PHP WITH MYSQL SERVER:-
--------------------------------------
-> mysqli_connect(host,username,password,dbname); // user may be root.
HOST:host ip addresse of database server,in our case is localhost // loop back ip add. is 127.0.0.1
USERNAME: name of the mysql user
PASSWORD: password of user
DBNAME: database name

php:-
-----
<?php
$con=mysqli_connect('localhost','root');
if(!$con)
  echo "connection failed";
 else
  echo "connection done";
 mysqli_close($con);
 ?>
 
// HOW TO SELECT DATA INTO MYSQL DATABASE THROUGH PHP:-
-------------------------------------------------------
// HOW TO SELECT DATABASE
-> mysqli_select_db($con,databasename);
<?php
$con=mysqli_connect('localhost','root');
if(!$con)
  echo "connection failed";
 else
  echo "connection done";
 mysqli_select_db($con,'db3');
 mysqli_close($con);
 ?>

// HOW TO INSERT DATA INTO MYSQL DATABASE THROUGH PHP:-
-------------------------------------------------------
<html>
<head>
</head>
<body>
  <form action="insert.php" method="post">
  <input type="number" placeholder="Enter book id" name="bookid"/>
  <input type="text" placeholder="Enter title" name="title"/>
  <input type="text" placeholder="Enter price" name="price"/>
  <input type="submit" value="insert" />
</form>
</body>
</html>

---------------insert.php-------------
<?php
  $bookid=$_POST['bookid'];
  $title=$_POST['title'];
  $price=$_POST['price'];
  $conn=mysqli_connect('localhost','root');
  mysqli_select_db($con,'db3');
  $q="insert into book (bookid,title,price) values ($bookid,'$title',$price)";
  mysqli_query($con,$q);
  mysqli_close($con);
?>

HOW TO SELECT DATA FROM MYSQL TABLE THROUGH PHP:-
-------------------------------------------------
SELECT CMD. IN SQL RETRIEVES DATA FROM THE TABLE(WITHOUT DELETING FROM THE TABLE)
$q="some select query"
$result=mysql_query($con,$q);  //2d array in $result

<?php
 $conn=mysqli_connect('localhost','root');
 mysqli_select_db($con,'db3');
 $q="select * from book";
 $result=mysql_query($con,$q); 
 $num=mysqli_num_rows($result);
 for($i=1;$i<=$num;$i++)
 {
 $row=mysqli_fetch_array($result);
 echo $row['bookid']." ".$row['title']." ".$row['price'];
 }
 mysqli_close($con);
?>

HOW UPDATE DATA FROM MYSQL TABLE THROUGH PHP:-
--------------------------------------------
UPDATE table_name
SET column_name=new_value
[,column_name=new_value,...]
WHERE condition;

update book
set price=price*1.1
where publisher='abc';

php
---
<?php
  $publisher=$_POST['pub'];
  $per=$_POST['percent'];
  $conn=mysqli_connect('localhost','root');
  mysqli_select_db($con,'db3');
  $q="UPDATE book SET price=price8(1+$per/100) WHERE publisher='$publisher'";
  mysqli_query($con,$q); 
  mysqli_close($con);

DELETE DATA FROM MYSQL TABLE THROUGH PHP:-
------------------------------------------
WE CANNOT DELETE FIELD FROM THE TABLE,WE CAN DELETE ROW INTO THE TABLE.
1) DELETE FROM TABLE_NAME;
2) DELETE FROM TABLE_NAME
    WHERE CONDITATION;

-----------HTML-------
<from action="delete.php">
<input type="text" name="id">

-----php-----
<?php
  $bookid=$_GET['id'];
  $conn=mysqli_connect('localhost','root');
  mysqli_select_db($con,'db3');
  $q="delete from book where bookid=$bookid";
  mysqli_query($con,$q); 
  mysqli_close($con);
?>
  









